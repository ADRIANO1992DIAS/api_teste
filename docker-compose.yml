version: "3.9"

services:
  db:
    image: postgres:15-alpine
    container_name: pgdasd-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Atenção: não use usuário iniciando com "pg_"
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"   # host:container — do host use 5433; entre containers use 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pgdasd-mock
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Comunicação interna entre containers
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      API_HOST: ${API_HOST:-0.0.0.0}
      API_PORT: ${API_PORT:-8000}
      # Outras variáveis do app
      CONSUMER_KEY: ${CONSUMER_KEY}
      CONSUMER_SECRET: ${CONSUMER_SECRET}
      CERTIFICADO_SENHA: ${CERTIFICADO_SENHA}
      CNPJ_CONTRATANTE: ${CNPJ_CONTRATANTE}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8002:8000"   # host:container — do host use 8002; entre containers use 8000
    # volumes:
    #   - .:/app  # opcional para desenvolvimento (hot-reload)

volumes:
  pgdata:
